{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\akash\\\\Desktop\\\\proj\\\\myapp\\\\src\\\\App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newItem: \"\",\n      list: []\n    };\n  }\n\n  addItem(todovalue) {\n    if (todovalue !== \"\") {\n      const newItem = {\n        id: Date.now(),\n        value: todovalue,\n        isDone: false\n      };\n      const list = [...this.state.list];\n      list.push(newItem);\n      this.setState({\n        list,\n        newItem: \"\"\n      });\n    }\n  }\n\n  deleteItem(id) {\n    const list = [...this.state.list];\n    const updatedlist = list.filter(item => item.id !== id);\n    this.setState({\n      list: updatedlist\n    });\n  }\n\n  update(input) {\n    this.setState({\n      newItem: input\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      width: \"250\",\n      height: \"250 \",\n      className: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"app-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, \" ToDo App\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, \"add an item....\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"input-text\",\n      placeholder: \"write to do\",\n      required: true,\n      value: this.state.newItem,\n      onChange: e => this.update(e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"add-btn\",\n      onClick: () => this.addItem(this.state.newItem),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, \"click me!!! \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, this.state.list.map(item => {\n      return /*#__PURE__*/React.createElement(\"li\", {\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        name: \"isDone\",\n        checked: item.isDone,\n        onChange: () => {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 23\n        }\n      }), item.value, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn\",\n        onClick: () => this.deleteItem(item.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 24\n        }\n      }, \"delete\"));\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/akash/Desktop/proj/myapp/src/App.js"],"names":["React","App","Component","constructor","props","state","newItem","list","addItem","todovalue","id","Date","now","value","isDone","push","setState","deleteItem","updatedlist","filter","item","update","input","render","logo","e","target","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nclass App extends React.Component{\n  \n  constructor(props){ \n    super(props);\n    this.state={\n      newItem:\"\",\n      list:[]\n    }\n  }\n  addItem(todovalue){\n    if(todovalue!==\"\"){\n      const newItem={\n        id:Date.now(),\n        value:todovalue,\n        isDone:false\n      }\n      const list=[...this.state.list];\n      list.push(newItem);\n      this.setState({\n        list,\n        newItem:\"\"\n      });\n    }\n  }\n  deleteItem(id){\n    const list=[...this.state.list];\n    const updatedlist=list.filter(item => item.id !== id);\n    this.setState({\n      list:updatedlist,\n    });\n  }\n\n  update(input){\n    this.setState({\n      newItem:input\n    })\n  }\n\n  render(){\n    return(\n      <div>\n        <img src={logo} width=\"250\" height=\"250 \"className=\"logo\"/>\n        <h1 className=\"app-title\"> ToDo App</h1>\n        <div className=\"container\">\n          add an item....\n          <br/>\n          <input \n            type=\"text\"  \n            className=\"input-text\" \n            placeholder=\"write to do\" required\n            value={this.state.newItem}\n            onChange={e => this.update(e.target.value)}\n          />\n          <button  \n          className=\"add-btn\"\n          onClick={()=>this.addItem(this.state.newItem)}\n          >click me!!! </button>\n           <div className=\"list\">\n            <ul>\n              {\n                this.state.list.map(item=>{\n                  return(\n                    <li key={item.id}>\n                      <input\n                       type=\"checkbox\"\n                       name=\"isDone\"\n                       checked={item.isDone}\n                       onChange={()=>{}}/>\n                       {item.value}\n                       <button className=\"btn\"\n                       onClick={()=>this.deleteItem(item.id)}>\n                         delete</button>\n                    </li>\n                  );\n                })\n              }\n             \n            </ul>\n           </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}